// <auto-generated />
using System;
using CarShopping.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarShopping.Migrations
{
    [DbContext(typeof(MySQLContext))]
    [Migration("20250126171933_UpdatedEntitiesBusinessRules")]
    partial class UpdatedEntitiesBusinessRules
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarShopping.Model.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("brand");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime>("FabricationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fabricationDate");

                    b.Property<bool>("IsAvaliable")
                        .HasColumnType("bit")
                        .HasColumnName("isAvaliable");

                    b.Property<bool>("IsSold")
                        .HasColumnType("bit")
                        .HasColumnName("isSold");

                    b.Property<int>("Mileage")
                        .HasColumnType("int")
                        .HasColumnName("mileage");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("SellingValue")
                        .HasColumnType("float")
                        .HasColumnName("sellingValue");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("car");
                });

            modelBuilder.Entity("CarShopping.Model.CarDealer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AmountAvaliableCars")
                        .HasColumnType("int")
                        .HasColumnName("amountAvaliableCars");

                    b.Property<int>("CarQuantity")
                        .HasColumnType("int")
                        .HasColumnName("carQuantity");

                    b.Property<int>("Employees")
                        .HasColumnType("int")
                        .HasColumnName("employeesQuantity");

                    b.Property<double>("MonthRevenue")
                        .HasColumnType("float")
                        .HasColumnName("monthRevenue");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("dealership");
                });

            modelBuilder.Entity("CarShopping.Model.Car", b =>
                {
                    b.HasOne("CarShopping.Model.CarDealer", "Owner")
                        .WithMany("Cars")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("CarShopping.Model.CarDealer", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
